# Notese que hay una previa configuracion de herramientas de prueba y yo las ejecuto desde el entorno declarado previamente
# Buscar una mejor manera de hacer la logica que defina si ejecutar o no el pipe de integracion
# La version de las librerias compatibles con el proyecto deberia declararse centralizadamente, leerse desde un fichero de config del proyecto y no escribirse en el pipe
# TODO: Leer configuracion de dependencias para CI desde pyproject.toml
# DONE: Usar el entorno (poetry) para ejecutar las pruebas
# DONE: Ejecutar de manera lineal (no paralela) el work tanto de commit como de aceptacion
#
name: Pylint


on: [push]

jobs:
  commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11 
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        cd simple_app/
        poetry install --with commit
    - name: Analysing the code with pylint
      id: pylint
      continue-on-error: true
      run: |
        cd simple_app/
        poetry run pylint $(git ls-files '*.py')
    - name: Running unitesting
      id: unittesting
      continue-on-error: true
      run: |
        cd simple_app/
        poetry install --with commit
        poetry run pytest
    - name: checking
      if: ${{ steps.pylint.outcome != 'success' }}
      run: echo "Hubo un error, por lo que se revertira el commit"
  #TODO: dev should know its commit was reverted
  #TODO: Should NOT to run following job, Â¿exit non0?

  acceptance:
    needs: commit 
    runs-on: ubuntu-latest
    steps:
    - name: Check Commit Type
      id: checkft
      uses: gsactions/commit-message-checker@v2
      with:
        pattern: '^feat'
        flags: 'gm'
        error: "No feat commit msg found"
    - name: Check status
      if: ${{ steps.checkft.outcome == 'success' }}
      uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Exec integration testing
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        cd simple_app/
        poetry install --with integration
        poetry run pytest -m integration
